#!/usr/bin/env bash
set -euo pipefail

LOGFILE="/opt/kali/install.log"
KALI_DIR="/opt/kali"
PKG_DIR="kali-packages"
CLONE_DIR="$KALI_DIR/$PKG_DIR"
REPO_LIST="$KALI_DIR/repos.txt"
REPO_NAMES="$KALI_DIR/repo_names.txt"

PACMAN_LIST="$KALI_DIR/pacman.txt"
YAY_LIST="$KALI_DIR/yay.txt"
MANUAL_LIST="$KALI_DIR/manual_build.txt"
REMAIN_AFTER_PACMAN="$KALI_DIR/_remain_after_pacman.txt"

mkdir -p "$CLONE_DIR"
cd "$CLONE_DIR"

echo "[*] Checking prerequisites..."
for cmd in curl jq pacman; do
  command -v "$cmd" >/dev/null || { echo "Missing required command: $cmd" >&2; exit 1; }
done
if command -v yay >/dev/null; then
  HAVE_YAY=1
else
  HAVE_YAY=0
  echo "[!] 'yay' not found. AUR check will be skipped."
fi

echo "[*] Fetching repo URLs from GitLab..."
: > "$REPO_LIST"
for page in {1..20}; do
  curl --silent "https://gitlab.com/api/v4/groups/kalilinux%2Fpackages/projects?per_page=100&page=$page" \
  | jq -r '.[].http_url_to_repo' >> "$REPO_LIST"
done
echo "[*] Saved full repo list to $REPO_LIST"

# Clean to package-like names and sort unique
sed 's|https://gitlab.com/kalilinux/packages/||; s|\.git$||' "$REPO_LIST" \
  | sed 's|^\.||' \
  | awk 'NF' \
  | sort -u > "$REPO_NAMES"
echo "[*] Saved cleaned repo names to $REPO_NAMES"

# 1) Find packages in official repos (pacman)
echo "[*] Scanning Arch repos (pacman -Si)..."
: > "$PACMAN_LIST"
while IFS= read -r pkg; do
  if pacman -Si -- "$pkg" &>/dev/null; then
    echo "$pkg" >> "$PACMAN_LIST"
  fi
done < "$REPO_NAMES"
sort -u -o "$PACMAN_LIST" "$PACMAN_LIST"
echo "[*] Wrote $(wc -l <"$PACMAN_LIST") packages to $PACMAN_LIST"

# 2) Diff to get the remainder after pacman
comm -23 <(sort -u "$REPO_NAMES") <(sort -u "$PACMAN_LIST") > "$REMAIN_AFTER_PACMAN"

# 3) Check AUR with yay (if available)
: > "$YAY_LIST"
if [[ "$HAVE_YAY" -eq 1 ]]; then
  echo "[*] Scanning AUR (yay -Si --aur)..."
  while IFS= read -r pkg; do
    # --aur restricts to AUR; --quiet keeps output minimal
    if yay -Si --aur -- "$pkg" &>/dev/null; then
      echo "$pkg" >> "$YAY_LIST"
    fi
  done < "$REMAIN_AFTER_PACMAN"
  sort -u -o "$YAY_LIST" "$YAY_LIST"
  echo "[*] Wrote $(wc -l <"$YAY_LIST") packages to $YAY_LIST"
else
  echo -n > "$YAY_LIST"
fi

# 4) Final remainder that need manual build
#   REPO_NAMES \ (pacman ∪ yay)
comm -23 \
  <(sort -u "$REPO_NAMES") \
  <(sort -u "$PACMAN_LIST" "$YAY_LIST") \
  > "$MANUAL_LIST"

echo "--------------------------------"
echo "[✓] Discovery complete (no installs performed)."
echo "Total repo names:       $(wc -l <"$REPO_NAMES")"
echo "In Arch repos (pacman): $(wc -l <"$PACMAN_LIST")  -> $PACMAN_LIST"
echo "In AUR (yay):           $(wc -l <"$YAY_LIST")     -> $YAY_LIST"
echo "Manual build needed:    $(wc -l <"$MANUAL_LIST")  -> $MANUAL_LIST"

# Optional: log a brief summary
{
  echo "[$(date)] Summary:"
  echo "  Repo names:    $(wc -l <"$REPO_NAMES")"
  echo "  pacman:        $(wc -l <"$PACMAN_LIST")"
  echo "  yay:           $(wc -l <"$YAY_LIST")"
  echo "  manual:        $(wc -l <"$MANUAL_LIST")"
} | tee -a "$LOGFILE"

